{"ast":null,"code":"var _jsxFileName = \"/Users/praneeth/Desktop/Web frontend/Webfrontend/src/Components/Timer2.js\";\nimport React, { useState, useEffect } from 'react';\nimport Calculate from './Calculate';\n\nconst Timer2 = props => {\n  const [seconds, setSeconds] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n  const [time, setTime] = useState(0);\n\n  function toggle() {\n    setIsActive(!isActive);\n\n    if (isActive) {\n      setTime(seconds);\n      props.setTotalTime(props.totalTime + seconds);\n    }\n  }\n\n  function reset() {\n    setSeconds(0);\n    props.setTotalTime(props.totalTime - seconds);\n    setIsActive(false);\n  }\n\n  useEffect(() => {\n    let interval = null;\n\n    if (isActive) {\n      interval = setInterval(() => {\n        setSeconds(seconds => seconds + 1);\n      }, 1000);\n    } else if (!isActive && seconds !== 0) {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [isActive, seconds]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Calculate, {\n    time2: time,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 10\n    }\n  })), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, \"Timer 1 \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, seconds, \"s\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: ` button-primary stopwatch-btn-gre button -${isActive ? 'active' : 'inactive'}`,\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, isActive ? 'Stop' : 'Start'), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"stopwatch-btn-gre button\",\n    onClick: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Reset\")));\n};\n\nexport default Timer2;","map":{"version":3,"sources":["/Users/praneeth/Desktop/Web frontend/Webfrontend/src/Components/Timer2.js"],"names":["React","useState","useEffect","Calculate","Timer2","props","seconds","setSeconds","isActive","setIsActive","time","setTime","toggle","setTotalTime","totalTime","reset","interval","setInterval","clearInterval"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAuB,aAAvB;;AACA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,CAAD,CAAhC;;AAKC,WAASW,MAAT,GAAkB;AAChBH,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;;AACD,QAAGA,QAAH,EAAY;AACVG,MAAAA,OAAO,CAACL,OAAD,CAAP;AACAD,MAAAA,KAAK,CAACQ,YAAN,CAAmBR,KAAK,CAACS,SAAN,GAAkBR,OAArC;AACD;AAEF;;AAED,WAASS,KAAT,GAAiB;AACfR,IAAAA,UAAU,CAAC,CAAD,CAAV;AACAF,IAAAA,KAAK,CAACQ,YAAN,CAAmBR,KAAK,CAACS,SAAN,GAAkBR,OAArC;AACAG,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD;;AAKDP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,QAAQ,GAAG,IAAf;;AACA,QAAIR,QAAJ,EAAc;AACZQ,MAAAA,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC3BV,QAAAA,UAAU,CAAED,OAAO,IAAIA,OAAO,GAAG,CAAvB,CAAV;AACD,OAFqB,EAEnB,IAFmB,CAAtB;AAGD,KAJD,MAIO,IAAI,CAACE,QAAD,IAAaF,OAAO,KAAK,CAA7B,EAAgC;AACrCY,MAAAA,aAAa,CAACF,QAAD,CAAb;AACD;;AACD,WAAO,MAAME,aAAa,CAACF,QAAD,CAA1B;AACD,GAVQ,EAUN,CAACR,QAAD,EAAWF,OAAX,CAVM,CAAT;AAYA,sBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAGI,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,CADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,OADH,MAHF,eAOE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACA,IAAA,SAAS,EAAG,6CAA4CE,QAAQ,GAAG,QAAH,GAAc,UAAW,EADzF;AAEA,IAAA,OAAO,EAAEI,MAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGJ,QAAQ,GAAG,MAAH,GAAY,OAJvB,CADF,eAOE;AAAQ,IAAA,SAAS,EAAC,0BAAlB;AAA6C,IAAA,OAAO,EAAEO,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPF,CAPF,CAFF;AAwBD,CA9DD;;AAgEA,eAAeX,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Calculate from  './Calculate'\nconst Timer2 = (props) => {\n  const [seconds, setSeconds] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n  const [time, setTime] = useState(0)\n  \n\n  \n  \n   function toggle() {\n     setIsActive(!isActive);\n    if(isActive){\n      setTime(seconds)\n      props.setTotalTime(props.totalTime + seconds)\n    }\n\n  }\n\n  function reset() {\n    setSeconds(0);\n    props.setTotalTime(props.totalTime - seconds)\n    setIsActive(false);\n  }\n\n \n  \n\n  useEffect(() => {\n    let interval = null;\n    if (isActive) {\n      interval = setInterval(() => {\n        setSeconds (seconds => seconds + 1);\n      }, 1000);\n    } else if (!isActive && seconds !== 0) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [isActive, seconds]);\n\n  return (\n    \n    <div>\n    <div><Calculate time2 ={time}/></div>  \n    <h1>Timer 1 </h1>\n      <div className=\"time\">\n        {seconds}s\n        \n      </div>\n      <div className=\"row\">\n        <button \n        className={` button-primary stopwatch-btn-gre button -${isActive ? 'active' : 'inactive'}`} \n        onClick={toggle} \n        >\n          {isActive ? 'Stop' : 'Start'}\n        </button>\n        <button className=\"stopwatch-btn-gre button\" onClick={reset}>\n          Reset\n        </button>\n      </div>\n\n      \n    </div>\n  );\n};\n\nexport default Timer2;"]},"metadata":{},"sourceType":"module"}