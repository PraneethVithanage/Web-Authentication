{"ast":null,"code":"var _jsxFileName = \"/Users/praneeth/Desktop/stopwatch/stopwatch/src/Components/Timer.js\";\nimport React, { useState, useEffect } from 'react';\n\nconst Timer = () => {\n  const [seconds, setSeconds] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n  const num1 = seconds / 10;\n\n  function toggle() {\n    setIsActive(!isActive);\n  }\n\n  function reset() {\n    setSeconds(0);\n    setIsActive(false);\n  }\n\n  useEffect(() => {\n    let interval = null;\n\n    if (isActive) {\n      interval = setInterval(() => {\n        setSeconds(seconds => seconds + 1);\n      }, 100);\n    } else if (!isActive && seconds !== 0) {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [isActive, seconds]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, \"Timer 1 \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, seconds / 10, \"s\", num1), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: ` button-primary stopwatch-btn-gre button -${isActive ? 'active' : 'inactive'}`,\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, isActive ? 'Stop' : 'Start'), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"stopwatch-btn-gre button\",\n    onClick: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Reset\")));\n};\n\nexport default Timer;","map":{"version":3,"sources":["/Users/praneeth/Desktop/stopwatch/stopwatch/src/Components/Timer.js"],"names":["React","useState","useEffect","Timer","seconds","setSeconds","isActive","setIsActive","num1","toggle","reset","interval","setInterval","clearInterval"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAMO,IAAI,GAAGJ,OAAO,GAAC,EAArB;;AAEA,WAASK,MAAT,GAAkB;AAChBF,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD;;AAED,WAASI,KAAT,GAAiB;AACfL,IAAAA,UAAU,CAAC,CAAD,CAAV;AACAE,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD;;AAGDL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,QAAQ,GAAG,IAAf;;AACA,QAAIL,QAAJ,EAAc;AACZK,MAAAA,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC3BP,QAAAA,UAAU,CAAED,OAAO,IAAIA,OAAO,GAAG,CAAvB,CAAV;AACD,OAFqB,EAEnB,GAFmB,CAAtB;AAGD,KAJD,MAIO,IAAI,CAACE,QAAD,IAAaF,OAAO,KAAK,CAA7B,EAAgC;AACrCS,MAAAA,aAAa,CAACF,QAAD,CAAb;AACD;;AACD,WAAO,MAAME,aAAa,CAACF,QAAD,CAA1B;AACD,GAVQ,EAUN,CAACL,QAAD,EAAWF,OAAX,CAVM,CAAT;AAYA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,GAAC,EADX,OAEGI,IAFH,CAFF,eAOE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAG,6CAA4CF,QAAQ,GAAG,QAAH,GAAc,UAAW,EAAjG;AAAoG,IAAA,OAAO,EAAEG,MAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QAAQ,GAAG,MAAH,GAAY,OADvB,CADF,eAKE;AAAQ,IAAA,SAAS,EAAC,0BAAlB;AAA6C,IAAA,OAAO,EAAEI,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,CAPF,CADF;AAqBD,CAhDD;;AAkDA,eAAeP,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\n\nconst Timer = () => {\n  const [seconds, setSeconds] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n  const num1 = seconds/10;\n\n  function toggle() {\n    setIsActive(!isActive);\n  }\n\n  function reset() {\n    setSeconds(0);\n    setIsActive(false);\n  }\n  \n\n  useEffect(() => {\n    let interval = null;\n    if (isActive) {\n      interval = setInterval(() => {\n        setSeconds (seconds => seconds + 1);\n      }, 100);\n    } else if (!isActive && seconds !== 0) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [isActive, seconds]);\n\n  return (\n    <div>\n    <h1>Timer 1 </h1>\n      <div className=\"time\">\n        {seconds/10}s\n        {num1}\n        \n      </div>\n      <div className=\"row\">\n        <button className={` button-primary stopwatch-btn-gre button -${isActive ? 'active' : 'inactive'}`} onClick={toggle}>\n          {isActive ? 'Stop' : 'Start'}\n         \n        </button>\n        <button className=\"stopwatch-btn-gre button\" onClick={reset}>\n          Reset\n        </button>\n      </div>\n\n      \n    </div>\n  );\n};\n\nexport default Timer;"]},"metadata":{},"sourceType":"module"}